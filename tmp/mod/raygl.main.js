{"intl":"var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module raygl.main */require( 'raygl.main', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    \"use strict\";\n\nvar Plane = require( \"webgl.plane\" );\n\nvar texture = {\n  colors: {\n    data: [],\n    width: 2048\n  }\n};\n\nwindow.res = function ( res ) {\n  window.localStorage.setItem( \"res\", res );\n  window.location.reload();\n};\n\n// Deal with resolution.\nvar res = window.localStorage.getItem( \"res\" );\nif ( res === null ) res = 1;\nres = parseInt( res );\nif ( isNaN( res ) ) res = 1;\ndocument.getElementById( \"res1\" ).removeAttribute( \"disabled\" );\ndocument.getElementById( \"res2\" ).removeAttribute( \"disabled\" );\ndocument.getElementById( \"res4\" ).removeAttribute( \"disabled\" );\ndocument.getElementById( \"res\" + res ).setAttribute( \"disabled\", \"true\" );\n\n\nfor ( var j = 0; j < texture.colors.width; j++ ) {\n  var rr = Math.floor( 256 * Math.random() );\n  var gg = Math.floor( 256 * Math.random() );\n  var bb = Math.floor( 256 * Math.random() );\n  //rr = gg = bb = 60;\n  texture.colors.data.push( rr );\n  texture.colors.data.push( gg );\n  texture.colors.data.push( bb );\n  texture.colors.data.push( 127 * ( 1 + Math.cos( Math.PI * 2 * j / texture.colors.width ) ) );\n}\n\nvar plane = new Plane( {\n  texture: texture,\n  render: function ( time, uniform ) {\n    uniform.X = time * .013;\n    uniform.Y = time * .019;\n    uniform.Z = time * .070;\n    uniform.time = time;\n  },\n  resolution: res\n} );\nplane.start();\n\n  \nmodule.exports._ = _;\n/**\n * @module raygl.main\n * @see module:$\n * @see module:webgl.plane\n\n */\n});","zip":"require(\"raygl.main\",function(t,e,r){var o=function(){function e(){return o(r,arguments)}var r={en:{},fr:{}},o=t(\"$\").intl;return e.all=r,e}(),a=t(\"webgl.plane\"),n={colors:{data:[],width:2048}};window.res=function(t){window.localStorage.setItem(\"res\",t),window.location.reload()};var d=window.localStorage.getItem(\"res\");null===d&&(d=1),d=parseInt(d),isNaN(d)&&(d=1),document.getElementById(\"res1\").removeAttribute(\"disabled\"),document.getElementById(\"res2\").removeAttribute(\"disabled\"),document.getElementById(\"res4\").removeAttribute(\"disabled\"),document.getElementById(\"res\"+d).setAttribute(\"disabled\",\"true\");for(var l=0;l<n.colors.width;l++){var s=Math.floor(256*Math.random()),i=Math.floor(256*Math.random()),u=Math.floor(256*Math.random());n.colors.data.push(s),n.colors.data.push(i),n.colors.data.push(u),n.colors.data.push(127*(1+Math.cos(2*Math.PI*l/n.colors.width)))}new a({texture:n,render:function(t,e){e.X=.013*t,e.Y=.019*t,e.Z=.07*t,e.time=t},resolution:d}).start(),e.exports._=o});\n//# sourceMappingURL=raygl.main.js.map","map":{"version":3,"file":"raygl.main.js","sources":["raygl.main.js"],"sourcesContent":["/** @module raygl.main */require( 'raygl.main', function(require, module, exports) { var _=function(){var D={\"en\":{},\"fr\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    \"use strict\";\n\nvar Plane = require( \"webgl.plane\" );\n\nvar texture = {\n  colors: {\n    data: [],\n    width: 2048\n  }\n};\n\nwindow.res = function ( res ) {\n  window.localStorage.setItem( \"res\", res );\n  window.location.reload();\n};\n\n// Deal with resolution.\nvar res = window.localStorage.getItem( \"res\" );\nif ( res === null ) res = 1;\nres = parseInt( res );\nif ( isNaN( res ) ) res = 1;\ndocument.getElementById( \"res1\" ).removeAttribute( \"disabled\" );\ndocument.getElementById( \"res2\" ).removeAttribute( \"disabled\" );\ndocument.getElementById( \"res4\" ).removeAttribute( \"disabled\" );\ndocument.getElementById( \"res\" + res ).setAttribute( \"disabled\", \"true\" );\n\n\nfor ( var j = 0; j < texture.colors.width; j++ ) {\n  var rr = Math.floor( 256 * Math.random() );\n  var gg = Math.floor( 256 * Math.random() );\n  var bb = Math.floor( 256 * Math.random() );\n  //rr = gg = bb = 60;\n  texture.colors.data.push( rr );\n  texture.colors.data.push( gg );\n  texture.colors.data.push( bb );\n  texture.colors.data.push( 127 * ( 1 + Math.cos( Math.PI * 2 * j / texture.colors.width ) ) );\n}\n\nvar plane = new Plane( {\n  texture: texture,\n  render: function ( time, uniform ) {\n    uniform.X = time * .013;\n    uniform.Y = time * .019;\n    uniform.Z = time * .070;\n    uniform.time = time;\n  },\n  resolution: res\n} );\nplane.start();\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","_","X","D","arguments","en","fr","intl","all","Plane","texture","colors","data","width","window","res","localStorage","setItem","location","reload","getItem","parseInt","isNaN","document","getElementById","removeAttribute","setAttribute","j","rr","Math","floor","random","gg","bb","push","cos","PI","render","time","uniform","Y","Z","resolution","start"],"mappings":"AAAyBA,QAAS,aAAc,SAASA,EAASC,EAAQC,GAAW,GAAIC,GAAE,WAAuD,QAASA,KAAI,MAAOC,GAAEC,EAAEC,WAApE,GAAID,IAAGE,MAAQC,OAASJ,EAAEJ,EAAQ,KAAKS,IAAiD,OAARN,GAAEO,IAAIL,EAASF,KAGjMQ,EAAQX,EAAS,eAEjBY,GACFC,QACEC,QACAC,MAAO,MAIXC,QAAOC,IAAM,SAAWA,GACtBD,OAAOE,aAAaC,QAAS,MAAOF,GACpCD,OAAOI,SAASC,SAIlB,IAAIJ,GAAMD,OAAOE,aAAaI,QAAS,MAC1B,QAARL,IAAeA,EAAM,GAC1BA,EAAMM,SAAUN,GACXO,MAAOP,KAAQA,EAAM,GAC1BQ,SAASC,eAAgB,QAASC,gBAAiB,YACnDF,SAASC,eAAgB,QAASC,gBAAiB,YACnDF,SAASC,eAAgB,QAASC,gBAAiB,YACnDF,SAASC,eAAgB,MAAQT,GAAMW,aAAc,WAAY,OAGjE,KAAM,GAAIC,GAAI,EAAGA,EAAIjB,EAAQC,OAAOE,MAAOc,IAAM,CAC/C,GAAIC,GAAKC,KAAKC,MAAO,IAAMD,KAAKE,UAC5BC,EAAKH,KAAKC,MAAO,IAAMD,KAAKE,UAC5BE,EAAKJ,KAAKC,MAAO,IAAMD,KAAKE,SAEhCrB,GAAQC,OAAOC,KAAKsB,KAAMN,GAC1BlB,EAAQC,OAAOC,KAAKsB,KAAMF,GAC1BtB,EAAQC,OAAOC,KAAKsB,KAAMD,GAC1BvB,EAAQC,OAAOC,KAAKsB,KAAM,KAAQ,EAAIL,KAAKM,IAAe,EAAVN,KAAKO,GAAST,EAAIjB,EAAQC,OAAOE,SAGvE,GAAIJ,IACdC,QAASA,EACT2B,OAAQ,SAAWC,EAAMC,GACvBA,EAAQrC,EAAW,KAAPoC,EACZC,EAAQC,EAAW,KAAPF,EACZC,EAAQE,EAAW,IAAPH,EACZC,EAAQD,KAAOA,GAEjBI,WAAY3B,IAER4B,QAGN5C,EAAOC,QAAQC,EAAIA"},"dependencies":["mod/$","mod/webgl.plane"]}